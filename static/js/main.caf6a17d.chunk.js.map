{"version":3,"sources":["components/images/overcastBG.jpeg","components/images/rainBG.jpeg","components/images/snowBG.jpg","components/images/stormBG.jpeg","components/images/sunBG.jpg","components/images/sunCloudBG.jpeg","components/handleDate.js","components/degreeChange.js","components/passINFO.js","components/apiCall.js","components/tables.jsx","components/mainDIsplay.jsx","serviceWorker.js","index.js"],"names":["module","exports","handleDate","info","today","Date","day","getDay","month","getMonth","weekdays","date","months","handleDateEnding","getDate","num","n","toString","substr","selectedTemp","handleDegreeClick","e","target","id","changeDegree","array","document","getElementById","fButton","cButton","forEach","ele","temp","innerHTML","slice","parseFloat","toFixed","style","background","pointerEvents","passINFO","currentTemp","weatherDescription","location","tempHigh","tempLow","humidity","wind","imgController","status","icon","bodyBG","body","indexOf","src","backgroundImage","sunBG","overcastBG","sunCloudBG","stormBG","rainBG","snowBG","apiFunctions","a","fetch","mode","response","json","newData","console","log","main","weatherStatus","weather","description","name","sys","country","temp_max","temp_min","speed","alert","newCall","checkKeyDown","keyCode","click","MakeTables","Component","MainDisplay","alt","className","onClick","type","placeholder","onKeyDown","value","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.caf6a17d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/overcastBG.ca2fd4c9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/rainBG.2ec978cf.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/snowBG.51145e7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stormBG.1bbe1143.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sunBG.bda2b166.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunCloudBG.e7ad90df.jpeg\";","const handleDate = info => {\n  const today = new Date();\n  const day = today.getDay();\n  const month = today.getMonth();\n\n  info.day = weekdays[day];\n  info.date = months[month] + \" \" + handleDateEnding(today.getDate());\n};\n\nconst handleDateEnding = num => {\n  let n = num.toString().substr(-1);\n\n  if (n === \"1\" && num !== 11) {\n    n = \"st\";\n  } else if (n === \"2\" && num !== 12) {\n    n = \"nd\";\n  } else if (n === \"3\" && num !== 13) {\n    n = \"rd\";\n  } else {\n    n = \"th\";\n  }\n\n  return num.toString() + n;\n};\n\nconst weekdays = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\"\n];\n\nconst months = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"Aug\",\n  \"Sept\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n\nexport { handleDate };\n","let selectedTemp = \"C\";\n\nconst handleDegreeClick = e => {\n  if (e.target.id === \"fahrenheit\") {\n    selectedTemp = \"F\";\n  } else {\n    selectedTemp = \"C\";\n  }\n  changeDegree();\n};\n\nconst changeDegree = () => {\n  const a = document.getElementById(\"currentTemp\");\n  const b = document.getElementById(\"tempHighText\");\n  const c = document.getElementById(\"tempLowText\");\n  const array = [a, b, c];\n\n  const fButton = document.getElementById(\"fahrenheit\");\n  const cButton = document.getElementById(\"celsius\");\n\n  if (selectedTemp === \"F\") {\n    array.forEach(ele => {\n      let temp = ele.innerHTML.slice(0, -3);\n      temp = parseFloat((temp * 9) / 5 + 32).toFixed(1);\n      ele.innerHTML = temp + \"° F\";\n    });\n    fButton.style.background =\n      \"linear-gradient(to bottom, #fc4b69 5%, #a34b59 100%)\";\n\n    cButton.style.background =\n      \"linear-gradient(to bottom, #000000 5%, #a34b59 100%)\";\n    fButton.style.pointerEvents = \"none\";\n    cButton.style.pointerEvents = \"auto\";\n  } else {\n    array.forEach(ele => {\n      let temp = ele.innerHTML.slice(0, -3);\n      temp = parseFloat(((temp - 32) * 5) / 9).toFixed(1);\n      ele.innerHTML = temp + \"° C\";\n    });\n\n    cButton.style.background =\n      \"linear-gradient(to bottom, #fc4b69 5%, #a34b59 100%)\";\n\n    fButton.style.background =\n      \"linear-gradient(to bottom, #000000 5%, #a34b59 100%)\";\n    fButton.style.pointerEvents = \"auto\";\n    cButton.style.pointerEvents = \"none\";\n  }\n};\n\nexport { handleDegreeClick, changeDegree, selectedTemp };\n","import { selectedTemp, changeDegree } from \"./degreeChange\";\nimport overcastBG from \"./images/overcastBG.jpeg\";\nimport rainBG from \"./images/rainBG.jpeg\";\nimport snowBG from \"./images/snowBG.jpg\";\nimport stormBG from \"./images/stormBG.jpeg\";\nimport sunBG from \"./images/sunBG.jpg\";\nimport sunCloudBG from \"./images/sunCloudBG.jpeg\";\n\nconst passINFO = info => {\n  document.getElementById(\"currentTemp\").innerHTML = info.currentTemp + \"° C\";\n  document.getElementById(\"weatherStatus\").innerHTML = info.weatherDescription;\n  document.getElementById(\"dayDiv\").innerHTML = info.day;\n  document.getElementById(\"dateDiv\").innerHTML = info.date;\n  document.getElementById(\"location\").innerHTML = info.location;\n  document.getElementById(\"tempHighText\").innerHTML = info.tempHigh + \"° C\";\n  document.getElementById(\"tempLowText\").innerHTML = info.tempLow + \"° C\";\n  document.getElementById(\"humidityText\").innerHTML = info.humidity + \"%\";\n  document.getElementById(\"windText\").innerHTML = info.wind + \"mph\";\n  imgController(info.weatherDescription);\n  if (selectedTemp === \"F\") {\n    changeDegree();\n  }\n};\n\nconst imgController = status => {\n  const icon = document.getElementById(\"weatherGraphic\");\n  const bodyBG = document.body;\n\n  if (status.indexOf(\"clear\") >= 0 || status.indexOf(\"Clear\") >= 0) {\n    icon.src = \"http://openweathermap.org/img/wn/01d@2x.png\";\n    bodyBG.style.backgroundImage = \"url(\" + sunBG + \")\";\n  }\n\n  if (status.indexOf(\"cloud\") >= 0 || status.indexOf(\"Cloud\") >= 0) {\n    icon.src = \"http://openweathermap.org/img/wn/04d@2x.png\";\n    if (status.indexOf(\"overcast\") >= 0) {\n      bodyBG.style.backgroundImage = \"url(\" + overcastBG + \")\";\n    } else {\n      bodyBG.style.backgroundImage = \"url(\" + sunCloudBG + \")\";\n    }\n  }\n\n  if (status.indexOf(\"rain\") >= 0 || status.indexOf(\"Rain\") >= 0) {\n    if (status.indexOf(\"thunder\") >= 0 || status.indexOf(\"Thunder\") >= 0) {\n      icon.src = \"http://openweathermap.org/img/wn/11n@2x.png\";\n      bodyBG.style.backgroundImage = \"url(\" + stormBG + \")\";\n    } else {\n      icon.src = \"http://openweathermap.org/img/wn/10n@2x.png\";\n      bodyBG.style.backgroundImage = \"url(\" + rainBG + \")\";\n    }\n  }\n\n  if (status.indexOf(\"snow\") >= 0 || status.indexOf(\"Snow\") >= 0) {\n    icon.src = \"http://openweathermap.org/img/wn/13d@2x.png\";\n    bodyBG.style.backgroundImage = \"url(\" + snowBG + \")\";\n  }\n};\n\nexport { passINFO };\n","import { handleDate } from \"./handleDate\";\nimport { passINFO } from \"./passINFO\";\n\nconst apiFunctions = (() => {\n  async function newCall(location) {\n    try {\n      const response = await fetch(\n        \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n          location +\n          \"&APPID=b0724c24118141e549b0048fcae7ce4d\",\n        { mode: \"cors\" }\n      );\n\n      const newData = await response.json();\n      const info = {};\n      console.log(newData);\n      info.currentTemp = (parseFloat(newData.main.temp) - 273.15).toFixed(1);\n      info.weatherStatus = newData.weather[0].main;\n      info.weatherDescription = newData.weather[0].description;\n\n      handleDate(info);\n      info.location = newData.name + \", \" + newData.sys.country;\n\n      info.tempHigh = (parseFloat(newData.main.temp_max) - 273.15).toFixed(1);\n      info.tempLow = (parseFloat(newData.main.temp_min) - 273.15).toFixed(1);\n\n      info.humidity = newData.main.humidity;\n      info.wind = newData.wind.speed;\n\n      passINFO(info);\n    } catch (error) {\n      alert(\"There was an error with your search.\");\n    }\n  }\n\n  const checkKeyDown = e => {\n    if (e.keyCode === 13) document.getElementById(\"searchButton\").click();\n  };\n\n  return {\n    newCall,\n    checkKeyDown\n  };\n})();\n\nexport { apiFunctions };\n","import React, { Component } from \"react\";\n\nclass MakeTables extends Component {\n  render() {\n    return (\n      <div>\n        <table id=\"infoTable\">\n          <tbody>\n            <tr>\n              <td id=\"humidity\">Humidity</td>\n              <td id=\"humidityText\"></td>\n            </tr>\n            <tr>\n              <td id=\"wind\">Wind</td>\n              <td id=\"windText\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <table id=\"temps\">\n          <tbody>\n            <tr>\n              <td id=\"tempHigh\">High</td>\n              <td id=\"tempHighText\"></td>\n            </tr>\n            <tr>\n              <td id=\"tempLow\">Low</td>\n              <td id=\"tempLowText\"></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default MakeTables;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { apiFunctions } from \"./apiCall\";\nimport MakeTables from \"./tables\";\nimport { handleDegreeClick } from \"./degreeChange\";\n\nclass MainDisplay extends Component {\n  constructor() {\n    super();\n    apiFunctions.newCall(\"london\");\n  }\n\n  render() {\n    return (\n      <div id=\"mainContainer\">\n        <div id=\"topHalf\">\n          <div id=\"graphicDiv\">\n            <img\n              id=\"weatherGraphic\"\n              src=\"images/overcast.png\"\n              alt=\"Weather Graphic\"\n            ></img>\n            <div id=\"weatherStatus\"></div>\n          </div>\n          <div id=\"dateContainer\">\n            <div id=\"dayDiv\"></div>\n            <div id=\"dateDiv\"></div>\n            <div id=\"location\"></div>\n            <div id=\"currentTemp\"></div>\n          </div>\n        </div>\n        <div id=\"bottomHalf\">\n          <MakeTables />\n          <div id=\"degreeContainer\">\n            <div\n              className=\"myButton\"\n              id=\"fahrenheit\"\n              onClick={handleDegreeClick}\n            >\n              F°\n            </div>\n            <div className=\"myButton\" id=\"celsius\" onClick={handleDegreeClick}>\n              C°\n            </div>\n          </div>\n          <div id=\"searchDiv\">\n            <input\n              type=\"text\"\n              id=\"searchBox\"\n              placeholder=\"London\"\n              onKeyDown={apiFunctions.checkKeyDown}\n            ></input>\n            <div\n              id=\"searchButton\"\n              onClick={() => {\n                apiFunctions.newCall(\n                  document.getElementById(\"searchBox\").value\n                );\n              }}\n            >\n              Search\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainDisplay;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainDisplay from \"./components/mainDIsplay\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<MainDisplay />, document.getElementById(\"root\"));\ndocument.getElementById(\"celsius\").style.pointerEvents = \"none\";\ndocument.getElementById(\"fahrenheit\").style.background =\n  \"linear-gradient(to bottom, #000000 5%, #a34b59 100%)\";\n\nserviceWorker.unregister();\n"],"sourceRoot":""}